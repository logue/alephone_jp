.SUFFIXES: .o .C .c  .cpp


############################################################

include mkflags
include mk.inf

############################################################

C++FLAGS = $(DEBUG) $(ARCH)

.c.o:
	$(CC) $(ALL_INCLUDES) $(C++FLAGS) -E $*.c -o $*.ip
	$(SJISFIX) $*.ip  $*.i
	$(CC) $(ALL_INCLUDES) $(C++FLAGS) -c $*.i -o $*.o
	$(DBGRM) $*.ip $*.i

.C.o:
	$(CXX) $(ALL_INCLUDES) $(C++FLAGS) -E $*.C -o $*.ip
	$(SJISFIX) $*.ip  $*.i
	$(CXX) $(ALL_INCLUDES) $(C++FLAGS) -c $*.i -o $*.o
	$(DBGRM) $*.ip $*.i

.cpp.o:
	$(CXX) $(ALL_INCLUDES) $(C++FLAGS) -E $*.cpp -o $*.ip
	$(SJISFIX) $*.ip  $*.i
	$(CXX) $(ALL_INCLUDES) $(C++FLAGS) -c $*.i -o $*.o
	$(DBGRM) $*.ip $*.i


all: $(TARGET)

$(TARGET): $(OBJS)
	ar r AlephOneLib.a $(OBJS)
#	$(DLLWRAP) -o $(TARGET) $(OBJS) -mwindows --export-all-symbols $(ALL_LIBS) --output-def $(TARGET).def --driver-name g++
#	$(DLLTOOL) --def $(TARGET).def --dllname $(TARGET) --output-lib $(TARGET2)

clean:
	$(RM) -f $(TARGET) $(TARGET2) $(OBJS) log.txt

