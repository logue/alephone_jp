// -*- C++ -*- generated by wxGlade 0.5 on Mon Aug 13 13:06:37 2007 from C:\0save\marathon\EditorOnes\PhysicsEditorOneWX\src\res\PhysicsEditorOneWX.wxg

#include "PhysicsEditorMainFrame.h"


PhysicsEditorMainFrame::PhysicsEditorMainFrame(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxFrame(parent, id, title, pos, size, wxDEFAULT_FRAME_STYLE)
{
    // begin wxGlade: PhysicsEditorMainFrame::PhysicsEditorMainFrame
    notebook_1 = new wxNotebook(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxNB_LEFT);
    notebook_1_pane_1 = new wxPanel(notebook_1, wxID_ANY);
    notebook_2 = new wxNotebook(notebook_1_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0);
    panel_1 = new wxPanel(notebook_2, wxID_ANY);
    notebook_2_pane_1 = new wxPanel(notebook_2, wxID_ANY);
    sizer_3_staticbox = new wxStaticBox(notebook_2_pane_1, -1, wxT("Shrapnel Damage"));
    sizer_4_staticbox = new wxStaticBox(notebook_2_pane_1, -1, wxT("Sounds"));
    sizer_5_staticbox = new wxStaticBox(notebook_2_pane_1, -1, wxT("Effects"));
    sizer_6_staticbox = new wxStaticBox(panel_1, -1, wxT("Immune/Weak"));
    sizer_7_staticbox = new wxStaticBox(panel_1, -1, wxT("Enemy/Friend"));
    sizer_8_staticbox = new wxStaticBox(panel_1, -1, wxT("Flag"));
    sizer_2_staticbox = new wxStaticBox(notebook_2_pane_1, -1, wxT("Sequences"));
    frame_1_menubar = new wxMenuBar();
    SetMenuBar(frame_1_menubar);
    wxMenu* File = new wxMenu();
    File->Append(wxID_NEW, wxT("&New"), wxT("Create new physics"), wxITEM_NORMAL);
    File->Append(wxID_OPEN, wxT("&Open"), wxEmptyString, wxITEM_NORMAL);
    File->Append(wxID_SAVE, wxT("&Save"), wxT("Save current physics"), wxITEM_NORMAL);
    File->Append(wxID_SAVEAS, wxT("Save As..."), wxT("Save current physics as other file"), wxITEM_NORMAL);
    File->AppendSeparator();
    File->Append(wxID_QUIT, wxT("&Quit"), wxT("Quit application"), wxITEM_NORMAL);
    frame_1_menubar->Append(File, wxT("&File"));
    const wxString list_box_1_choices[] = {
        
    };
    list_box_1 = new wxListBox(notebook_1_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_1_choices, 0);
    label_2 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Collection"));
    const wxString choice_col_choices[] = {
        
    };
    choice_col = new wxChoice(notebook_2_pane_1, ID_COLLECTION, wxDefaultPosition, wxDefaultSize, 0, choice_col_choices, 0);
    label_3 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Palette"));
    text_ctrl_pal = new wxTextCtrl(notebook_2_pane_1, ID_PALETTE, wxEmptyString);
    label_4 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Vitality"));
    text_ctrl_vi = new wxTextCtrl(notebook_2_pane_1, ID_VITALITY, wxEmptyString);
    label_5 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Class"));
    const wxString choice_cls_choices[] = {
        
    };
    choice_cls = new wxChoice(notebook_2_pane_1, ID_CLASS, wxDefaultPosition, wxDefaultSize, 0, choice_cls_choices, 0);
    label_6 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Radius"));
    text_ctrl_r = new wxTextCtrl(notebook_2_pane_1, ID_RADIUS, wxEmptyString);
    label_7 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Height"));
    text_ctrl_h = new wxTextCtrl(notebook_2_pane_1, ID_HEIGHT, wxEmptyString);
    label_8 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Hover"));
    text_ctrl_hov = new wxTextCtrl(notebook_2_pane_1, ID_HOVER, wxEmptyString);
    label_9 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Min Ledge"));
    text_ctrl_minLedge = new wxTextCtrl(notebook_2_pane_1, ID_MIN_LEDGE, wxEmptyString);
    label_10 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Max Ledge"));
    text_ctrl_maxLedge = new wxTextCtrl(notebook_2_pane_1, ID_MAX_LEDGE, wxEmptyString);
    label_11 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Ext. Vel. Scale"));
    text_ctrl_ext = new wxTextCtrl(notebook_2_pane_1, ID_EXT_VEL_SCALE, wxEmptyString);
    label_12 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Carry Item"));
    const wxString choice_item_choices[] = {
        
    };
    choice_item = new wxChoice(notebook_2_pane_1, ID_CARRY_ITEM, wxDefaultPosition, wxDefaultSize, 0, choice_item_choices, 0);
    label_13 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Half Visual Arc"));
    text_ctrl_hVisArc = new wxTextCtrl(notebook_2_pane_1, ID_HALF_VISUAL_ARC, wxEmptyString);
    label_14 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Vert. Vis. Arc"));
    text_ctrl_vVisArc = new wxTextCtrl(notebook_2_pane_1, ID_VERTICAL_VISUAL_ARC, wxEmptyString);
    label_15 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Intelligence"));
    const wxString choice_intelligence_choices[] = {
        
    };
    choice_intelligence = new wxChoice(notebook_2_pane_1, ID_INTELLIGENCE, wxDefaultPosition, wxDefaultSize, 0, choice_intelligence_choices, 0);
    label_16 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Speed"));
    text_ctrl_spd = new wxTextCtrl(notebook_2_pane_1, ID_SPEED, wxEmptyString);
    label_18 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("    preset"));
    const wxString choice_spdPreset_choices[] = {
        
    };
    choice_spdPreset = new wxChoice(notebook_2_pane_1, ID_SPEED_PRESET, wxDefaultPosition, wxDefaultSize, 0, choice_spdPreset_choices, 0);
    label_17 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Gravity"));
    text_ctrl_g = new wxTextCtrl(notebook_2_pane_1, ID_GRAVITY, wxEmptyString);
    label_19 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Stationaly"));
    text_ctrl_13 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_21 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Moving"));
    text_ctrl_14 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_22 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Hitting"));
    text_ctrl_15 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_23 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Soft Dying"));
    text_ctrl_16 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_24 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Soft Dead"));
    text_ctrl_17 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_25 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Hard Dying"));
    text_ctrl_18 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_26 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Hard Dead"));
    text_ctrl_19 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_27 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Teleport In"));
    text_ctrl_20 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_20 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Teleport Out"));
    text_ctrl_21 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_28 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Radius"));
    text_ctrl_22 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_29 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Base"));
    text_ctrl_23 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_30 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Random"));
    text_ctrl_24 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_31 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Scale"));
    text_ctrl_25 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_32 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Type"));
    const wxString choice_6_choices[] = {
        
    };
    choice_6 = new wxChoice(notebook_2_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_6_choices, 0);
    checkbox_1 = new wxCheckBox(notebook_2_pane_1, wxID_ANY, wxT("According to level (Alien)"));
    label_33 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Copy from"));
    const wxString choice_7_choices[] = {
        
    };
    choice_7 = new wxChoice(notebook_2_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_7_choices, 0);
    label_34 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Pitch"));
    text_ctrl_26 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_35 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Activation"));
    const wxString choice_8_choices[] = {
        
    };
    choice_8 = new wxChoice(notebook_2_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_8_choices, 0);
    label_36 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Friend Acti."));
    const wxString choice_9_choices[] = {
        
    };
    choice_9 = new wxChoice(notebook_2_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_9_choices, 0);
    label_37 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Clear"));
    const wxString choice_10_choices[] = {
        
    };
    choice_10 = new wxChoice(notebook_2_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_10_choices, 0);
    label_38 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Kill"));
    const wxString choice_11_choices[] = {
        
    };
    choice_11 = new wxChoice(notebook_2_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_11_choices, 0);
    label_39 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Apology"));
    const wxString choice_12_choices[] = {
        
    };
    choice_12 = new wxChoice(notebook_2_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_12_choices, 0);
    label_40 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Friend Fire"));
    const wxString choice_13_choices[] = {
        
    };
    choice_13 = new wxChoice(notebook_2_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_13_choices, 0);
    label_41 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Flaming"));
    const wxString choice_14_choices[] = {
        
    };
    choice_14 = new wxChoice(notebook_2_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_14_choices, 0);
    label_42 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Random"));
    const wxString choice_15_choices[] = {
        
    };
    choice_15 = new wxChoice(notebook_2_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_15_choices, 0);
    label_43 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Sound Mask"));
    text_ctrl_27 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_1 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Impact"));
    const wxString choice_16_choices[] = {
        
    };
    choice_16 = new wxChoice(notebook_2_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_16_choices, 0);
    label_44 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Melee Impact"));
    const wxString choice_17_choices[] = {
        
    };
    choice_17 = new wxChoice(notebook_2_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_17_choices, 0);
    label_45 = new wxStaticText(notebook_2_pane_1, wxID_ANY, wxT("Contrail"));
    const wxString choice_18_choices[] = {
        
    };
    choice_18 = new wxChoice(notebook_2_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_18_choices, 0);
    button_1 = new wxButton(notebook_2_pane_1, wxID_ANY, wxT("Set as default"));
    checkbox_44 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_64 = new wxCheckBox(panel_1, wxID_ANY, wxT("Explosion"));
    checkbox_45 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_65 = new wxCheckBox(panel_1, wxID_ANY, wxT("Electrical shock"));
    checkbox_46 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_66 = new wxCheckBox(panel_1, wxID_ANY, wxT("Fighter's projectile"));
    checkbox_47 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_67 = new wxCheckBox(panel_1, wxID_ANY, wxT("Absorbed"));
    checkbox_48 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_68 = new wxCheckBox(panel_1, wxID_ANY, wxT("Flame"));
    checkbox_49 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_69 = new wxCheckBox(panel_1, wxID_ANY, wxT("Hound claws"));
    checkbox_50 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_70 = new wxCheckBox(panel_1, wxID_ANY, wxT("Alien shotgun"));
    checkbox_51 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_71 = new wxCheckBox(panel_1, wxID_ANY, wxT("Hulk slap"));
    checkbox_52 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_72 = new wxCheckBox(panel_1, wxID_ANY, wxT("Compiler bolt"));
    checkbox_53 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_73 = new wxCheckBox(panel_1, wxID_ANY, wxT("Fusion bolt"));
    checkbox_54 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_74 = new wxCheckBox(panel_1, wxID_ANY, wxT("Hunter bolt"));
    checkbox_55 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_75 = new wxCheckBox(panel_1, wxID_ANY, wxT("Fist"));
    checkbox_56 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_76 = new wxCheckBox(panel_1, wxID_ANY, wxT("Teleporter"));
    checkbox_57 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_77 = new wxCheckBox(panel_1, wxID_ANY, wxT("Defender shot"));
    checkbox_58 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_78 = new wxCheckBox(panel_1, wxID_ANY, wxT("Yeti claws"));
    checkbox_59 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_79 = new wxCheckBox(panel_1, wxID_ANY, wxT("Yeti rock"));
    checkbox_60 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_80 = new wxCheckBox(panel_1, wxID_ANY, wxT("Crushing"));
    checkbox_61 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_81 = new wxCheckBox(panel_1, wxID_ANY, wxT("Lava"));
    checkbox_62 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_82 = new wxCheckBox(panel_1, wxID_ANY, wxT("Suffocation"));
    checkbox_63 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_83 = new wxCheckBox(panel_1, wxID_ANY, wxT("Goo"));
    checkbox_84 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_88 = new wxCheckBox(panel_1, wxID_ANY, wxT("Energy drain"));
    checkbox_85 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_89 = new wxCheckBox(panel_1, wxID_ANY, wxT("Oxygen drain"));
    checkbox_86 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_90 = new wxCheckBox(panel_1, wxID_ANY, wxT("Hummer bolt"));
    checkbox_87 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_91 = new wxCheckBox(panel_1, wxID_ANY, wxT("Shotgun projectile"));
    checkbox_92 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_92_copy_15 = new wxCheckBox(panel_1, wxID_ANY, wxT("Player"));
    checkbox_92_copy = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_92_copy_15_copy = new wxCheckBox(panel_1, wxID_ANY, wxT("Human civilian"));
    checkbox_92_copy_1 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_92_copy_15_copy_1 = new wxCheckBox(panel_1, wxID_ANY, wxT("M.A.D.D."));
    checkbox_92_copy_2 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_92_copy_15_copy_2 = new wxCheckBox(panel_1, wxID_ANY, wxT("Posessed drone"));
    checkbox_92_copy_3 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_92_copy_15_copy_3 = new wxCheckBox(panel_1, wxID_ANY, wxT("Defender"));
    checkbox_92_copy_4 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_92_copy_15_copy_4 = new wxCheckBox(panel_1, wxID_ANY, wxT("Fighter"));
    checkbox_92_copy_5 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_92_copy_15_copy_5 = new wxCheckBox(panel_1, wxID_ANY, wxT("Trooper"));
    checkbox_92_copy_6 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_92_copy_15_copy_6 = new wxCheckBox(panel_1, wxID_ANY, wxT("Hunter"));
    checkbox_92_copy_7 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_92_copy_15_copy_7 = new wxCheckBox(panel_1, wxID_ANY, wxT("Enforcer"));
    checkbox_92_copy_8 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_92_copy_15_copy_8 = new wxCheckBox(panel_1, wxID_ANY, wxT("Juggernaut"));
    checkbox_92_copy_9 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_92_copy_15_copy_9 = new wxCheckBox(panel_1, wxID_ANY, wxT("Compiler"));
    checkbox_92_copy_10 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_92_copy_15_copy_10 = new wxCheckBox(panel_1, wxID_ANY, wxT("Cyborg"));
    checkbox_92_copy_11 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_92_copy_15_copy_11 = new wxCheckBox(panel_1, wxID_ANY, wxT("Assimilated"));
    checkbox_92_copy_12 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_92_copy_15_copy_12 = new wxCheckBox(panel_1, wxID_ANY, wxT("Drone"));
    checkbox_92_copy_13 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_92_copy_15_copy_13 = new wxCheckBox(panel_1, wxID_ANY, wxT("Tick"));
    checkbox_92_copy_14 = new wxCheckBox(panel_1, wxID_ANY, wxEmptyString);
    checkbox_92_copy_15_copy_14 = new wxCheckBox(panel_1, wxID_ANY, wxT("Yeti"));
    button_2 = new wxButton(panel_1, wxID_ANY, wxT("Check all class for enemy"));
    button_3 = new wxButton(panel_1, wxID_ANY, wxT("Uncheck all class for enemy"));
    button_4 = new wxButton(panel_1, wxID_ANY, wxT("Set as default"));
    notebook_2_pane_3 = new wxPanel(notebook_2, wxID_ANY);
    notebook_1_pane_2 = new wxPanel(notebook_1, wxID_ANY);
    notebook_1_pane_3 = new wxPanel(notebook_1, wxID_ANY);
    notebook_1_pane_4 = new wxPanel(notebook_1, wxID_ANY);
    notebook_1_pane_5 = new wxPanel(notebook_1, wxID_ANY);

    set_properties();
    do_layout();
    // end wxGlade
}


BEGIN_EVENT_TABLE(PhysicsEditorMainFrame, wxFrame)
    // begin wxGlade: PhysicsEditorMainFrame::event_table
    EVT_MENU(wxID_NEW, PhysicsEditorMainFrame::OnNew)
    EVT_MENU(wxID_SAVE, PhysicsEditorMainFrame::OnSave)
    EVT_MENU(wxID_SAVEAS, PhysicsEditorMainFrame::OnSaveAs)
    EVT_MENU(wxID_QUIT, PhysicsEditorMainFrame::OnQuit)
    EVT_LISTBOX(wxID_ANY, PhysicsEditorMainFrame::OnMonsterListSel)
    EVT_TEXT(ID_VITALITY, PhysicsEditorMainFrame::OnVitality)
    // end wxGlade
END_EVENT_TABLE();


void PhysicsEditorMainFrame::OnNew(wxCommandEvent &event)
{
    event.Skip();
    std::cout<<"Event handler (PhysicsEditorMainFrame::OnNew) not implemented yet"<<std::endl; //notify the user that he hasn't implemented the event handler yet
}


void PhysicsEditorMainFrame::OnSave(wxCommandEvent &event)
{
    event.Skip();
    std::cout<<"Event handler (PhysicsEditorMainFrame::OnSave) not implemented yet"<<std::endl; //notify the user that he hasn't implemented the event handler yet
}


void PhysicsEditorMainFrame::OnSaveAs(wxCommandEvent &event)
{
    event.Skip();
    std::cout<<"Event handler (PhysicsEditorMainFrame::OnSaveAs) not implemented yet"<<std::endl; //notify the user that he hasn't implemented the event handler yet
}


void PhysicsEditorMainFrame::OnQuit(wxCommandEvent &event)
{
    event.Skip();
    std::cout<<"Event handler (PhysicsEditorMainFrame::OnQuit) not implemented yet"<<std::endl; //notify the user that he hasn't implemented the event handler yet
}


// wxGlade: add PhysicsEditorMainFrame event handlers


void PhysicsEditorMainFrame::set_properties()
{
    // begin wxGlade: PhysicsEditorMainFrame::set_properties
    SetTitle(wxT("frame_1"));
    SetSize(wxSize(800, 520));
    list_box_1->SetMinSize(wxSize(-1,450));
    text_ctrl_pal->SetToolTip(wxT("CLUT"));
    notebook_2_pane_1->SetMinSize(wxSize(-1, -1));
    panel_1->SetMinSize(wxSize(-1, -1));
    notebook_2->SetMinSize(wxSize(625, -1));
    notebook_1_pane_1->SetMinSize(wxSize(-1, -1));
    notebook_1->SetMinSize(wxSize(-1,-1));
    notebook_1->SetFocus();
    // end wxGlade
}


void PhysicsEditorMainFrame::do_layout()
{
    // begin wxGlade: PhysicsEditorMainFrame::do_layout
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxVERTICAL);
    wxFlexGridSizer* grid_sizer_1 = new wxFlexGridSizer(1, 2, 0, 0);
    wxFlexGridSizer* grid_sizer_13 = new wxFlexGridSizer(1, 3, 0, 0);
    wxStaticBoxSizer* sizer_8 = new wxStaticBoxSizer(sizer_8_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_17 = new wxFlexGridSizer(28, 1, 0, 0);
    wxFlexGridSizer* grid_sizer_15 = new wxFlexGridSizer(4, 1, 0, 0);
    wxStaticBoxSizer* sizer_7 = new wxStaticBoxSizer(sizer_7_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_16 = new wxFlexGridSizer(16, 2, 0, 0);
    wxStaticBoxSizer* sizer_6 = new wxStaticBoxSizer(sizer_6_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_14 = new wxFlexGridSizer(24, 2, 0, 0);
    wxFlexGridSizer* grid_sizer_2 = new wxFlexGridSizer(1, 3, 0, 0);
    wxFlexGridSizer* grid_sizer_5 = new wxFlexGridSizer(3, 1, 0, 0);
    wxStaticBoxSizer* sizer_5 = new wxStaticBoxSizer(sizer_5_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_11 = new wxFlexGridSizer(3, 2, 0, 0);
    wxStaticBoxSizer* sizer_4 = new wxStaticBoxSizer(sizer_4_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_10 = new wxFlexGridSizer(10, 2, 0, 0);
    wxFlexGridSizer* grid_sizer_4 = new wxFlexGridSizer(3, 1, 0, 0);
    wxFlexGridSizer* grid_sizer_9 = new wxFlexGridSizer(1, 2, 0, 0);
    wxStaticBoxSizer* sizer_3 = new wxStaticBoxSizer(sizer_3_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_7 = new wxFlexGridSizer(2, 1, 0, 0);
    wxFlexGridSizer* grid_sizer_8 = new wxFlexGridSizer(5, 2, 0, 0);
    wxStaticBoxSizer* sizer_2 = new wxStaticBoxSizer(sizer_2_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_6 = new wxFlexGridSizer(9, 2, 0, 0);
    wxFlexGridSizer* grid_sizer_3 = new wxFlexGridSizer(17, 2, 0, 0);
    grid_sizer_1->Add(list_box_1, 0, wxEXPAND, 0);
    grid_sizer_3->Add(label_2, 0, 0, 0);
    grid_sizer_3->Add(choice_col, 0, 0, 0);
    grid_sizer_3->Add(label_3, 0, 0, 0);
    grid_sizer_3->Add(text_ctrl_pal, 0, 0, 0);
    grid_sizer_3->Add(label_4, 0, 0, 0);
    grid_sizer_3->Add(text_ctrl_vi, 0, 0, 0);
    grid_sizer_3->Add(label_5, 0, 0, 0);
    grid_sizer_3->Add(choice_cls, 0, 0, 0);
    grid_sizer_3->Add(label_6, 0, 0, 0);
    grid_sizer_3->Add(text_ctrl_r, 0, 0, 0);
    grid_sizer_3->Add(label_7, 0, 0, 0);
    grid_sizer_3->Add(text_ctrl_h, 0, 0, 0);
    grid_sizer_3->Add(label_8, 0, 0, 0);
    grid_sizer_3->Add(text_ctrl_hov, 0, 0, 0);
    grid_sizer_3->Add(label_9, 0, 0, 0);
    grid_sizer_3->Add(text_ctrl_minLedge, 0, 0, 0);
    grid_sizer_3->Add(label_10, 0, 0, 0);
    grid_sizer_3->Add(text_ctrl_maxLedge, 0, 0, 0);
    grid_sizer_3->Add(label_11, 0, 0, 0);
    grid_sizer_3->Add(text_ctrl_ext, 0, 0, 0);
    grid_sizer_3->Add(label_12, 0, 0, 0);
    grid_sizer_3->Add(choice_item, 0, 0, 0);
    grid_sizer_3->Add(label_13, 0, 0, 0);
    grid_sizer_3->Add(text_ctrl_hVisArc, 0, 0, 0);
    grid_sizer_3->Add(label_14, 0, 0, 0);
    grid_sizer_3->Add(text_ctrl_vVisArc, 0, 0, 0);
    grid_sizer_3->Add(label_15, 0, 0, 0);
    grid_sizer_3->Add(choice_intelligence, 0, 0, 0);
    grid_sizer_3->Add(label_16, 0, 0, 0);
    grid_sizer_3->Add(text_ctrl_spd, 0, 0, 0);
    grid_sizer_3->Add(label_18, 0, 0, 0);
    grid_sizer_3->Add(choice_spdPreset, 0, 0, 0);
    grid_sizer_3->Add(label_17, 0, 0, 0);
    grid_sizer_3->Add(text_ctrl_g, 0, 0, 0);
    grid_sizer_2->Add(grid_sizer_3, 1, wxEXPAND, 0);
    grid_sizer_6->Add(label_19, 0, 0, 0);
    grid_sizer_6->Add(text_ctrl_13, 0, 0, 0);
    grid_sizer_6->Add(label_21, 0, 0, 0);
    grid_sizer_6->Add(text_ctrl_14, 0, 0, 0);
    grid_sizer_6->Add(label_22, 0, 0, 0);
    grid_sizer_6->Add(text_ctrl_15, 0, 0, 0);
    grid_sizer_6->Add(label_23, 0, 0, 0);
    grid_sizer_6->Add(text_ctrl_16, 0, 0, 0);
    grid_sizer_6->Add(label_24, 0, 0, 0);
    grid_sizer_6->Add(text_ctrl_17, 0, 0, 0);
    grid_sizer_6->Add(label_25, 0, 0, 0);
    grid_sizer_6->Add(text_ctrl_18, 0, 0, 0);
    grid_sizer_6->Add(label_26, 0, 0, 0);
    grid_sizer_6->Add(text_ctrl_19, 0, 0, 0);
    grid_sizer_6->Add(label_27, 0, 0, 0);
    grid_sizer_6->Add(text_ctrl_20, 0, 0, 0);
    grid_sizer_6->Add(label_20, 0, 0, 0);
    grid_sizer_6->Add(text_ctrl_21, 0, 0, 0);
    sizer_2->Add(grid_sizer_6, 1, wxEXPAND, 0);
    grid_sizer_4->Add(sizer_2, 1, wxEXPAND, 0);
    grid_sizer_8->Add(label_28, 0, 0, 0);
    grid_sizer_8->Add(text_ctrl_22, 0, 0, 0);
    grid_sizer_8->Add(label_29, 0, 0, 0);
    grid_sizer_8->Add(text_ctrl_23, 0, 0, 0);
    grid_sizer_8->Add(label_30, 0, 0, 0);
    grid_sizer_8->Add(text_ctrl_24, 0, 0, 0);
    grid_sizer_8->Add(label_31, 0, 0, 0);
    grid_sizer_8->Add(text_ctrl_25, 0, 0, 0);
    grid_sizer_8->Add(label_32, 0, 0, 0);
    grid_sizer_8->Add(choice_6, 0, 0, 0);
    grid_sizer_7->Add(grid_sizer_8, 1, wxEXPAND, 0);
    grid_sizer_7->Add(checkbox_1, 0, 0, 0);
    sizer_3->Add(grid_sizer_7, 1, wxEXPAND, 0);
    grid_sizer_4->Add(sizer_3, 1, wxEXPAND, 0);
    grid_sizer_9->Add(label_33, 0, 0, 0);
    grid_sizer_9->Add(choice_7, 0, 0, 0);
    grid_sizer_4->Add(grid_sizer_9, 1, wxEXPAND, 0);
    grid_sizer_2->Add(grid_sizer_4, 1, wxEXPAND, 0);
    grid_sizer_10->Add(label_34, 0, 0, 0);
    grid_sizer_10->Add(text_ctrl_26, 0, 0, 0);
    grid_sizer_10->Add(label_35, 0, 0, 0);
    grid_sizer_10->Add(choice_8, 0, 0, 0);
    grid_sizer_10->Add(label_36, 0, 0, 0);
    grid_sizer_10->Add(choice_9, 0, 0, 0);
    grid_sizer_10->Add(label_37, 0, 0, 0);
    grid_sizer_10->Add(choice_10, 0, 0, 0);
    grid_sizer_10->Add(label_38, 0, 0, 0);
    grid_sizer_10->Add(choice_11, 0, 0, 0);
    grid_sizer_10->Add(label_39, 0, 0, 0);
    grid_sizer_10->Add(choice_12, 0, 0, 0);
    grid_sizer_10->Add(label_40, 0, 0, 0);
    grid_sizer_10->Add(choice_13, 0, 0, 0);
    grid_sizer_10->Add(label_41, 0, 0, 0);
    grid_sizer_10->Add(choice_14, 0, 0, 0);
    grid_sizer_10->Add(label_42, 0, 0, 0);
    grid_sizer_10->Add(choice_15, 0, 0, 0);
    grid_sizer_10->Add(label_43, 0, 0, 0);
    grid_sizer_10->Add(text_ctrl_27, 0, 0, 0);
    sizer_4->Add(grid_sizer_10, 1, wxEXPAND, 0);
    grid_sizer_5->Add(sizer_4, 1, wxEXPAND, 0);
    grid_sizer_11->Add(label_1, 0, 0, 0);
    grid_sizer_11->Add(choice_16, 0, 0, 0);
    grid_sizer_11->Add(label_44, 0, 0, 0);
    grid_sizer_11->Add(choice_17, 0, 0, 0);
    grid_sizer_11->Add(label_45, 0, 0, 0);
    grid_sizer_11->Add(choice_18, 0, 0, 0);
    sizer_5->Add(grid_sizer_11, 1, wxEXPAND, 0);
    grid_sizer_5->Add(sizer_5, 1, wxEXPAND, 0);
    grid_sizer_5->Add(button_1, 0, 0, 0);
    grid_sizer_2->Add(grid_sizer_5, 1, wxEXPAND, 0);
    notebook_2_pane_1->SetSizer(grid_sizer_2);
    grid_sizer_14->Add(checkbox_44, 0, 0, 0);
    grid_sizer_14->Add(checkbox_64, 0, 0, 0);
    grid_sizer_14->Add(checkbox_45, 0, 0, 0);
    grid_sizer_14->Add(checkbox_65, 0, 0, 0);
    grid_sizer_14->Add(checkbox_46, 0, 0, 0);
    grid_sizer_14->Add(checkbox_66, 0, 0, 0);
    grid_sizer_14->Add(checkbox_47, 0, 0, 0);
    grid_sizer_14->Add(checkbox_67, 0, 0, 0);
    grid_sizer_14->Add(checkbox_48, 0, 0, 0);
    grid_sizer_14->Add(checkbox_68, 0, 0, 0);
    grid_sizer_14->Add(checkbox_49, 0, 0, 0);
    grid_sizer_14->Add(checkbox_69, 0, 0, 0);
    grid_sizer_14->Add(checkbox_50, 0, 0, 0);
    grid_sizer_14->Add(checkbox_70, 0, 0, 0);
    grid_sizer_14->Add(checkbox_51, 0, 0, 0);
    grid_sizer_14->Add(checkbox_71, 0, 0, 0);
    grid_sizer_14->Add(checkbox_52, 0, 0, 0);
    grid_sizer_14->Add(checkbox_72, 0, 0, 0);
    grid_sizer_14->Add(checkbox_53, 0, 0, 0);
    grid_sizer_14->Add(checkbox_73, 0, 0, 0);
    grid_sizer_14->Add(checkbox_54, 0, 0, 0);
    grid_sizer_14->Add(checkbox_74, 0, 0, 0);
    grid_sizer_14->Add(checkbox_55, 0, 0, 0);
    grid_sizer_14->Add(checkbox_75, 0, 0, 0);
    grid_sizer_14->Add(checkbox_56, 0, 0, 0);
    grid_sizer_14->Add(checkbox_76, 0, 0, 0);
    grid_sizer_14->Add(checkbox_57, 0, 0, 0);
    grid_sizer_14->Add(checkbox_77, 0, 0, 0);
    grid_sizer_14->Add(checkbox_58, 0, 0, 0);
    grid_sizer_14->Add(checkbox_78, 0, 0, 0);
    grid_sizer_14->Add(checkbox_59, 0, 0, 0);
    grid_sizer_14->Add(checkbox_79, 0, 0, 0);
    grid_sizer_14->Add(checkbox_60, 0, 0, 0);
    grid_sizer_14->Add(checkbox_80, 0, 0, 0);
    grid_sizer_14->Add(checkbox_61, 0, 0, 0);
    grid_sizer_14->Add(checkbox_81, 0, 0, 0);
    grid_sizer_14->Add(checkbox_62, 0, 0, 0);
    grid_sizer_14->Add(checkbox_82, 0, 0, 0);
    grid_sizer_14->Add(checkbox_63, 0, 0, 0);
    grid_sizer_14->Add(checkbox_83, 0, 0, 0);
    grid_sizer_14->Add(checkbox_84, 0, 0, 0);
    grid_sizer_14->Add(checkbox_88, 0, 0, 0);
    grid_sizer_14->Add(checkbox_85, 0, 0, 0);
    grid_sizer_14->Add(checkbox_89, 0, 0, 0);
    grid_sizer_14->Add(checkbox_86, 0, 0, 0);
    grid_sizer_14->Add(checkbox_90, 0, 0, 0);
    grid_sizer_14->Add(checkbox_87, 0, 0, 0);
    grid_sizer_14->Add(checkbox_91, 0, 0, 0);
    sizer_6->Add(grid_sizer_14, 1, wxEXPAND, 0);
    grid_sizer_13->Add(sizer_6, 1, wxEXPAND, 0);
    grid_sizer_16->Add(checkbox_92, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_15, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_15_copy, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_1, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_15_copy_1, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_2, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_15_copy_2, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_3, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_15_copy_3, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_4, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_15_copy_4, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_5, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_15_copy_5, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_6, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_15_copy_6, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_7, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_15_copy_7, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_8, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_15_copy_8, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_9, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_15_copy_9, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_10, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_15_copy_10, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_11, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_15_copy_11, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_12, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_15_copy_12, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_13, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_15_copy_13, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_14, 0, 0, 0);
    grid_sizer_16->Add(checkbox_92_copy_15_copy_14, 0, 0, 0);
    sizer_7->Add(grid_sizer_16, 1, wxEXPAND, 0);
    grid_sizer_15->Add(sizer_7, 1, wxEXPAND, 0);
    grid_sizer_15->Add(button_2, 0, 0, 0);
    grid_sizer_15->Add(button_3, 0, 0, 0);
    grid_sizer_15->Add(button_4, 0, 0, 0);
    grid_sizer_13->Add(grid_sizer_15, 1, wxEXPAND, 0);
    sizer_8->Add(grid_sizer_17, 1, wxEXPAND, 0);
    grid_sizer_13->Add(sizer_8, 1, wxEXPAND, 0);
    panel_1->SetSizer(grid_sizer_13);
    notebook_2->AddPage(notebook_2_pane_1, wxT("Appearance"));
    notebook_2->AddPage(panel_1, wxT("Flags"));
    notebook_2->AddPage(notebook_2_pane_3, wxT("Attack"));
    grid_sizer_1->Add(notebook_2, 0, 0, 0);
    notebook_1_pane_1->SetSizer(grid_sizer_1);
    notebook_1->AddPage(notebook_1_pane_1, wxT("Monsters"));
    notebook_1->AddPage(notebook_1_pane_2, wxT("Effects"));
    notebook_1->AddPage(notebook_1_pane_3, wxT("Projectiles"));
    notebook_1->AddPage(notebook_1_pane_4, wxT("Physics"));
    notebook_1->AddPage(notebook_1_pane_5, wxT("Weapons"));
    sizer_1->Add(notebook_1, 1, wxEXPAND, 0);
    SetSizer(sizer_1);
    Layout();
    // end wxGlade
}

